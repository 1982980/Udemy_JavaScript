/*
Задание:

В каждой книге есть n страниц с номерами страниц от 1 до n. Написать функцию amountOfPages, аргумент которой summary составляется путем сложения количества цифр всех номеров страниц. Эта функция возвращает число - количество страниц n в книге. Чтобы было понятно что такое количество цифр, давайте рассмотрим примеры.

Пример:

Если на входе функции summary = 25, то на результат должен быть 17. Всего в числах от 1 до 17 содержится 25 цифр: 1234567891011121314151617.
123456789
10111213141516171819
20212223242526272829
30313233343536373839

Функция на вход как раз принимает это общее количество цифр, а возвращает конечное число, то есть последнюю страницу книги.

        amountOfPages(5) => 5

        amountOfPages(25) => 17

        amountOfPages(1095) => 401

        amountOfPages(185) => 97
*/

function amountOfPages(summary){
  let n = 0;
  let res = '';
  for(let i = 1; i<=summary; i++){
    res += i;
    if(res.length === summary){
      n = i;
      break;
    }
  }
  return console.log(n);
}

amountOfPages(5);
amountOfPages(25);
amountOfPages(1095);
amountOfPages(185);

//! Задачу не решил самостоятельно. Сложность была в том, чтобы добавлять каждое число по порядку и получить количество знаков, при этом посчитать количество цифр
//? Ответ: задаю переменные. переменная res => это пустая строка, которая будет содержать все символы чисел, которые будут добавляться. Переменная n => это количество чисел(по условию количество страниц). Затем запускаю цикл for , где i начинается с 1 и увеличивается на 1 (иннкремент), пока не станет = summary (количеству символов, аргумент функции). На каждой итерации цикла, добавляю к res число i. При приведении типов, res становится строкой из чисел i. Внутри цикла добавляю проверку if, если длинна res.length = summary, то присваиваю n число i и останавливаю цикл с помощью break. функция возвращает return число n.
